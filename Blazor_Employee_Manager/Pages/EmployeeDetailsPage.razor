@page "/";
@using Blazor_Employee_Manager.Services
@using Employee_Manager_Blazor.Models;

@inject ApiService apiService;
@inject HttpClient http;
@inject NavigationManager navigationManager;
@inject Blazored.Toast.Services.IToastService toastService;

<h3 id="employeeHeader">Employee Details</h3>

<a href="/user/add" class="btn btn-primary" role="button" id="addBtn">
    <i class="fa fa-plus" aria-hidden="true"></i>&nbsp;Add User
</a>

<div id="searchBox">
    Search <input />
</div>

@if (employees!=null) 
{
    @foreach (var emp in employees) 
    {
        <div class="card mt-3" id="cardDiv">
            <div class="card-header"><p>@emp.FirstName @emp.LastName</p>  <i class="fa fa-pencil-square-o" aria-hidden="true"></i></div>
            <img src="./css/user.png" class="card-img-top" alt="...">
            <div class="card-body">
                <p class="card-text">Address : @emp.Address</p>
                <button type="button" class="btn btn-secondary" id="editBtn" @onclick="@(()=>GoToEditPage(@emp.Id))">Edit</button>
                <button type="button" class="btn btn-danger" id="deleteBtn"
                data-bs-toggle="modal" data-bs-target="#staticBackdrop"
                @onclick="@(()=>showDeleteAlert(@emp.Id,@emp.FirstName))">
                    Delete
                </button>
            </div> 
        </div> 
    }
}

else
{
    <p>No data available...</p>
}
<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Do you wish to delete employee <strong>@Name</strong> with ID : <strong>@DevId</strong> ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="(()=>Delete())">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    public bool Show = false;

    public int DevId;

    public string? Name;

    private List<EmployeeInputParams>? employees;

    protected override async Task OnInitializedAsync() {

        employees = await apiService.GetEmployees();
    }

    private void showDeleteAlert(int Id, string name)
    {
        DevId = Id;
        Show = true;
        Name = name;
    }

    private async void Delete() 
    {

        await apiService.DeleteEmp(DevId);

        employees.RemoveAll(e => e.Id == DevId);

        toastService.ShowSuccess("Employee deleted successfully.");

        StateHasChanged();

        navigationManager.NavigateTo("/",forceLoad:true);
    }

    private void GoToEditPage(int id) 
    {

        DevId = id;
        navigationManager.NavigateTo($"/user/{DevId}");
    }


}

